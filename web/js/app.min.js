
/* Modified: November 11, 2015, 04:53:45 */ ! function () {

    // var xhttp = new XMLHttpRequest();
    // xhttp.onreadystatechange = function() {
    //     if (xhttp.readyState == 4 && xhttp.status == 200) {
    //         var tweets = JSON.parse(xhttp.responseText);
    //         console.log(tweets);
    //     }
    // };
    // xhttp.open("POST", "./php/retrieveTweets.php", true);
    // xhttp.send();

    // $.ajax({
    //     url: "./php/retrieveTweets.php",
    //     method: "POST",
    //     dataType: "json",
    // }).done(function(tweets) {
    //     alert(tweets.length);
    //     console.log(tweets);
    // }).fail(function() {
    //     alert( "error" );
    // }).always(function() {
    //     alert( "complete" );
    // });


    function a() {
        console.log("A!");
        var tweets;
        var xhttp = new XMLHttpRequest();
        xhttp.onreadystatechange = function() {
            if (xhttp.readyState == 4 && xhttp.status == 200) {
                tweets = JSON.parse(xhttp.responseText);
                console.log("total tweets: " + tweets.length);
                var count = 0;
                // for(var index in tweets) { 
                //     // setInterval(function(){ 
                //         //setTimeout(f(tweets[index]), 100000);
                //         f(tweets[index]); 
                //     // }, 5000);
                //     count++; 
                // }
                
                // setTimeout(tweets.forEach(function(tweet){
                //     f(tweet);
                //     count++;
                // }), 5000);
                // console.log(count);

                function iterate(i){
                    if(i < tweets.length){
                        setTimeout(function(){
                            i++;
                            f(tweets[i]);
                            iterate(i);
                        }, 500);
                    }
                }
                iterate(0);
            }
        };
        xhttp.open("POST", "./php/retrieveTweets.php", true);
        xhttp.send();
       
        
        // J.history({
        //     channel: I,
        //     count: 100,
        //     callback: function (a) {
        //         console.log("callback");
        //         J.each(a[0], f), b()
        //     },
        //     error: function (a) {
        //         console.log("error");
        //         console.log(a), a && b()
        //     }
        // })
    }

    function b() {
        console.log("B");

        
        J.subscribe({
            channel: I,
            callback: f
        })
        
    }

    function c(a, b) {
        if (a.geo) {
            var c = {};
            if (c.lat = a.geo.coordinates[0], c.lon = a.geo.coordinates[1], 0 !== c.lat || 0 !== c.lon) {
                var d = a.place.full_name;
                c.city = d, c.state = d.substring(d.lastIndexOf(",") + 1).trim(), c.name = a.user.name, c.screenname = a.user.screen_name, c.avatar = a.user.profile_image_url, c.tweet = a.text, c.id_str = a.id_str;
                var e = new Date(parseInt(a.timestamp_ms)),
                    f = e.toDateString().substr(4),
                    g = e.getHours() > 12 ? e.getHours() - 12 + ":" + e.getMinutes() + " PM" : e.getHours() + ":" + e.getMinutes() + " AM;";
                c.timestamp = g + " - " + f, c.tweet, b(c)
            }
        }
    }

    function d(a) {
        return a.replace(/((https?|s?ftp|ssh)\:\/\/[^"\s\<\>]*[^.,;'">\:\s\<\>\)\]\!])/g, function (a) {
            return '<a href="' + a + '" >' + a + "</a>"
        })
    }

    function e(a, b) {
        c(a, function (a) {
            if (document.querySelector(".emotion").style.backgroundImage = "url(images/" + b.icon + ")", document.querySelector(".button").href = "https://twitter.com/" + a.screenname, document.querySelector(".header").style.backgroundImage = "url(" + a.avatar + ")", document.querySelector(".name").textContent = a.name, document.querySelector(".screenname").textContent = "@" + a.screenname, document.querySelector(".text").innerHTML = twemoji.parse(d(a.tweet)), document.querySelector(".timestamp").textContent = a.timestamp, document.querySelector(".reply").href = "https://twitter.com/intent/tweet?in_reply_to=" + a.id_str, document.querySelector(".retweet").href = "https://twitter.com/intent/retweet?tweet_id=" + a.id_str, document.querySelector(".favorite").href = "https://twitter.com/intent/favorite?tweet_id=" + a.id_str, document.querySelector(".tweet").style.opacity = .9, document.querySelector("." + a.state)) {
                i[a.state] = i[a.state] || {
                    positive: 0,
                    negative: 0
                }, i[a.state][b.type] = (i[a.state][b.type] || 0) + 1;
                var c = document.querySelector("." + a.state);
                c.style.fill = i[a.state].positive > i[a.state].negative ? j : i[a.state].positive < i[a.state].negative ? k : l, c.setAttribute("data-positive", i[a.state].positive), c.setAttribute("data-negative", i[a.state].negative)
            }
            // var e = C([a.lon, a.lat]);
            // null !== e && H.enter().append("svg:image").attr("xlink:href", "images/" + b.icon).attr("width", "26").attr("height", "26").attr("transform", function () {
            //     return "translate(" + e + ")"
            // })
        })
    }

    function f(a) {
        a && a.place && a.lang && "US" === a.place.country_code && (t.some(function (b) {
            return a.text.toLowerCase().indexOf(b) > 0
        }) ? e(a, m) : u.some(function (b) {
            return a.text.toLowerCase().indexOf(b) > 0
        }) ? e(a, n) : v.some(function (b) {
            return a.text.toLowerCase().indexOf(b) > 0
        }) ? e(a, o) : w.some(function (b) {
            return a.text.toLowerCase().indexOf(b) > 0
        }) ? e(a, p) : x.some(function (b) {
            return a.text.toLowerCase().indexOf(b) > 0
        }) ? e(a, q) : y.some(function (b) {
            return a.text.toLowerCase().indexOf(b) > 0
        }) ? e(a, r) : z.some(function (b) {
            return a.text.toLowerCase().indexOf(b) > 0
        }) && e(a, s))
    }
    //var g = !0,
    //     h = document.getElementById("toggle");
    // // h.addEventListener("click", function () {
    //     g ? (J.unsubscribe({
    //         channel: I
    //     }), h.value = "Stream again", g = !1) : (a(), h.value = "Stop me!", g = !0)
    // }, !1);
    var i = {},
        j = "#FF0000",
        k = "#0000FF",
        l = "#800080",
        m = {
            type: "positive",
        },
        n = {
            type: "positive",
        },
        o = {
            type: "positive",
        },
        p = {
            type: "negative",
        },
        q = {
            type: "negative",
        },
        r = {
            type: "negative",
        },
        s = {
            type: "negative",
        },
        t = [
                'trump', 'donaldtrump', 'realdonaldtrump', 'trump2016', 'republican', 'conservative', 'GOP', 'GopDebate', 'JebBush', 'CarlyFiorina',
                'cruzcrew', 'cruz', 'cruz2016', 'tedcruz2016', 'trusted', 'curztovictory', 'cruzazul', 'cruzcontrol', 'bush2016', 'trumptrain', 
                'votetrump', 'trumparmy', 'rubio', 'marcorubio', 'rubio2016', 'gop2016', 'votetrump2016', 'choosecruz'
            ],
        u = [
                'trump', 'donaldtrump', 'realdonaldtrump', 'trump2016', 'republican', 'conservative', 'GOP', 'GopDebate', 'JebBush', 'CarlyFiorina',
                'cruzcrew', 'cruz', 'cruz2016', 'tedcruz2016', 'trusted', 'curztovictory', 'cruzazul', 'cruzcontrol', 'bush2016', 'trumptrain', 
                'votetrump', 'trumparmy', 'rubio', 'marcorubio', 'rubio2016', 'gop2016', 'votetrump2016', 'choosecruz'
            ],
        v = [
               'trump', 'donaldtrump', 'realdonaldtrump', 'trump2016', 'republican', 'conservative', 'GOP', 'GopDebate', 'JebBush', 'CarlyFiorina',
                'cruzcrew', 'cruz', 'cruz2016', 'tedcruz2016', 'trusted', 'curztovictory', 'cruzazul', 'cruzcontrol', 'bush2016', 'trumptrain', 
                'votetrump', 'trumparmy', 'rubio', 'marcorubio', 'rubio2016', 'gop2016', 'votetrump2016', 'choosecruz'
            ],
        w = [
                'dumptrump', 'hillaryclinton', 'clinton', 'bernie', 'sanders', 'bernieforpresident', 'berniesanders', 'berniesandersforpresident',
                'bernie4president', 'feelthebern2016', 'feelthebern', 'presidentbernie', 'berniesanders2016', 'democrat', 'democratic', 'DemocraticDebate', 'feelthebern2k16', 'bernie2016', 'sanders2016', 'DemDebate', 'TheDemocrats', 'liberals', 'Progressives', 'democrat2016'
            ],
        x = [
                'dumptrump', 'hillaryclinton', 'clinton', 'bernie', 'sanders', 'bernieforpresident', 'berniesanders', 'berniesandersforpresident',
                'bernie4president', 'feelthebern2016', 'feelthebern', 'presidentbernie', 'berniesanders2016', 'democrat', 'democratic', 'DemocraticDebate', 'feelthebern2k16', 'bernie2016', 'sanders2016', 'DemDebate', 'TheDemocrats', 'liberals', 'Progressives', 'democrat2016'            
            ],
        y = [
                'dumptrump', 'hillaryclinton', 'clinton', 'bernie', 'sanders', 'bernieforpresident', 'berniesanders', 'berniesandersforpresident',
                'bernie4president', 'feelthebern2016', 'feelthebern', 'presidentbernie', 'berniesanders2016', 'democrat', 'democratic', 'DemocraticDebate', 'feelthebern2k16', 'bernie2016', 'sanders2016', 'DemDebate', 'TheDemocrats', 'liberals', 'Progressives', 'democrat2016'
            ],
        z = [
                'dumptrump', 'hillaryclinton', 'clinton', 'bernie', 'sanders', 'bernieforpresident', 'berniesanders', 'berniesandersforpresident',
                'bernie4president', 'feelthebern2016', 'feelthebern', 'presidentbernie', 'berniesanders2016', 'democrat', 'democratic', 'DemocraticDebate', 'feelthebern2k16', 'bernie2016', 'sanders2016', 'DemDebate', 'TheDemocrats', 'liberals', 'Progressives', 'democrat2016'
            ],
        A = 900,
        B = 540,
        C = d3.geo.albersUsa(),
        D = d3.scale.linear().domain([0, 15]).range(["#5b5858", "#4f4d4d", "#454444", "#323131"]),
        E = d3.select("#map").append("svg").attr("width", A).attr("height", B),
        F = d3.geo.path().projection(C),
        G = E.append("g");
    d3.json("json/us-states.json", function (a, b) {
        G.selectAll("path").data(topojson.feature(b, b.objects.usStates).features).enter().append("path").attr("class", function (a) {
            return "states " + a.properties.STATE_ABBR
        }).attr("d", F).attr("fill", function (a, b) {
            return D(b)
        })
    });
    var H = E.selectAll("image").data([0]),
        I = "pubnub-twitter",
        J = PUBNUB.init({
            subscribe_key: "sub-c-78806dd4-42a6-11e4-aed8-02ee2ddab7fe"
        });
    a()
}();